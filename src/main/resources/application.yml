spring:
  application:
    name: 'eip-ero-register-checker-api'
  cloud:
    aws:
      region:
        auto: true
        use-default-aws-region-chain: true
      credentials:
        use-default-aws-credentials-chain: true
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/register_checker
    readOnlyUrl: ${spring.datasource.url}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: ${LIQUIBASE_CONTEXTS}

dluhc:
  request.header.name: ${REQUEST_HEADER_CLIENT_CERT_SERIAL}

api:
  ero-management:
    url: ${API_ERO_MANAGEMENT_URL}
  ier:
    base.url: ${API_IER_BASE_URL}
    sts.assume.role: ${API_IER_STS_ASSUME_ROLE}
    sts.assume.role.external-id: ${API_IER_STS_ASSUME_ROLE_EXTERNAL_ID}

sqs:
  ems-cidr-update-queue-name: ${SQS_EMS_CIDR_UPDATE_QUEUE_NAME}
  initiate-applicant-register-check-queue-name: ${SQS_INITIATE_APPLICANT_REGISTER_CHECK_QUEUE_NAME}
  confirm-applicant-register-check-result-queue-name: ${SQS_CONFIRM_APPLICANT_REGISTER_CHECK_RESULT_QUEUE_NAME}
  postal-vote-confirm-applicant-register-check-result-queue-name: ${SQS_POSTAL_VOTE_CONFIRM_APPLICANT_REGISTER_CHECK_RESULT_QUEUE_NAME}
  proxy-vote-confirm-applicant-register-check-result-queue-name: ${SQS_PROXY_VOTE_CONFIRM_APPLICANT_REGISTER_CHECK_RESULT_QUEUE_NAME}
  overseas-vote-confirm-applicant-register-check-result-queue-name: ${SQS_OVERSEAS_VOTE_CONFIRM_APPLICANT_REGISTER_CHECK_RESULT_QUEUE_NAME}
  register-check-result-response-queue-name: ${SQS_REGISTER_CHECK_RESULT_RESPONSE_QUEUE_NAME}
  remove-applicant-register-check-data-queue-name: ${SQS_REMOVE_APPLICANT_REGISTER_CHECK_DATA_QUEUE_NAME}
  forward-initiate-register-check-queue-name: ${SQS_INITIATE_REGISTER_CHECK_QUEUE_NAME}
  send-register-check-archive-message-queue-name: ${SQS_ARCHIVE_REGISTER_CHECK_QUEUE_NAME}
  forward-remove-register-check-data-message-queue-name: ${SQS_REMOVE_APPLICATION_REGISTER_CHECK_DATA_QUEUE_NAME}

caching.time-to-live: PT1H

logging:
  pattern:
    level: "%X{correlationId} %5p"

jobs:
  enabled: true
  lock-at-most-for: "PT100M" # Time Period of 100 Minutes
  register-check-monitoring:
    enabled: true
    name: "PendingRegisterCheckMonitoring"
    cron: "0 0 5 * * *" # Runs at 05:00 daily
    expected-maximum-pending-period: 24H
    excluded-gss-codes: "E99999999"
    send-email: true

email:
  client:
    sender: ${REGISTER_CHECK_MONITORING_SENDING_EMAIL_ADDRESS}
  pending-register-checks-content:
    subject: "Register Check Monitoring"
    email-body-template: email-templates/pending-register-checks.html
    recipients: ${REGISTER_CHECK_MONITORING_RECIPIENTS}
